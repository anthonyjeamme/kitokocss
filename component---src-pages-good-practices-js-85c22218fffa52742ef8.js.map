{"version":3,"sources":["webpack:///./src/pages/good-practices.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","SecondPage","a","createElement","title","className","m","module","exports","require","default","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","react_default","gatsby_browser_entry","to","href","rel","target","siteTitle","defaultProps","Layout","Fragment","header","site","siteMetadata","_755544856","node","SEO","description","lang","meta","keywords","_public_static_d_3978990474_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","arrayOf"],"mappings":"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","file":"component---src-pages-good-practices-js-85c22218fffa52742ef8.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst SecondPage = () => (\r\n  <Layout>\r\n    <SEO title=\"Page two\" />\r\n    <h1 className=\"measure\">Good practices</h1>\r\n\r\n    <section className=\"measure\">\r\n      <h2>Grid is a guide, not a restraint</h2>\r\n\r\n      <p>\r\n        Sometimes, some images sizes can't be controlled to stick the grid.\r\n        Some components like hero fullheight aren't aligned the the grid too. Just let it be.\r\n      </p>\r\n    </section>\r\n    <section className=\"measure\">\r\n      <h2>A website content is like a song</h2>\r\n\r\n      <p>\r\n        Typography give to your website content a rythmic.\r\n        Your visitor should eat your content, you have to make the read as fluid as possible.\r\n        The typefaces you choose are important but most important are the width of your paragraphs,\r\n        size/weight and the space between lines should be your main focus.\r\n      </p>\r\n    </section>\r\n  </Layout>\r\n)\r\n\r\nexport default SecondPage\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nconst Header = () => (\r\n  <header>\r\n    <nav className='navbar background-primary'>\r\n      <div className=\"navbar-container\">\r\n        <div className=\"navbar-start\">\r\n          <Link to='/'>\r\n            <div className=\"item\">\r\n              <small>\r\n\r\n                <i className=\"fas fa-flag\"></i> {' '}\r\n                Home\r\n            </small>\r\n            </div>\r\n          </Link>\r\n\r\n          <Link to='/docs'>\r\n            <div className=\"item\">\r\n              <small>\r\n                <i className=\"fas fa-book\"></i> {' '}\r\n                Docs\r\n            </small>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n\r\n        <div className=\"navbar-end\">\r\n          <a href=\"https://github.com/tonyjahim/kitokocss\" rel=\"noopener noreferrer\" target='_blank'>\r\n            <div className=\"item\">\r\n              <i className=\"fab fa-github fa-2x\" />\r\n            </div>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\n\r\nimport '../style/main.scss'\r\n\r\nconst Layout = ({ children, className }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <div className={className}>\r\n          <main>{children}</main>\r\n          <footer className=\"text-center\">\r\n            <small>\r\n              Built with <i className=\"fas fa-heart\" /> by <a href='https://anthony.jeamme.fr'>Anthony JEAMME</a>\r\n\r\n            </small>\r\n          </footer>\r\n        </div>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ]\r\n        .concat(\r\n          keywords.length > 0\r\n            ? {\r\n              name: `keywords`,\r\n              content: keywords.join(`, `),\r\n            }\r\n            : []\r\n        )\r\n        .concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n"],"sourceRoot":""}